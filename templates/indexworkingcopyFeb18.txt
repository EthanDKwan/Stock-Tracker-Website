<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Tracker</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>

<style>
        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(to right, #00bcd4, #8e44ad);
            color: #333;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
            text-align: center;
        }

        h1 {
            color: white;
            margin-bottom: 20px;
            font-size: 2.5rem;
        }

        #ticker-form {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            width: 100%;
            max-width: 400px;
        }

        #ticker-form input {
            padding: 10px;
            font-size: 18px;
            width: 100%;
            border-radius: 4px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        #ticker-form button {
            padding: 10px;
            font-size: 18px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #ticker-form button:hover {
            background-color: #2980b9;
        }

        #stock-info {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            margin-top: 20px;
        }

        #stock-info p {
            font-size: 18px;
            margin: 10px 0;
        }

        #stock-info span {
            font-weight: bold;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <h1>Stock Tracker</h1>

    <!-- Form to input the ticker -->
    <form id="ticker-form">
        <label for="ticker">Enter Ticker:</label>
        <input type="text" id="ticker" name="ticker" required>
        <button type="submit">Submit</button>
    </form>

    <!-- Placeholder for the current stock price -->
    <div id="stock-info">
        <p>Current Price: <span id="current_price">N/A</span></p>
	<p>Current 20-day SMA: <span id="current_20_day_sma">N/A</span></p>
	<p>Current 50-day SMA: <span id="current_50_day_sma">N/A</span></p>
	<p>Current MACD: <span id="current_macd">N/A</span></p>
	<p>Current Signal line: <span id="current_signal_line">N/A</span></p>
	<p>Current Histogram: <span id="current_histogram">N/A</span></p>
	<p>Current Buy Suggestion: <span id="current_buy_signal">N/A</span></p>
	<p>Most recent Buy suggestion: <span id="most_recent_buy_signal_date">N/A</span></p>
	<p>Current Sell Suggestion: <span id="current_sell_signal">N/A</span></p>
	<p>Most recent Sell suggestion: <span id="most_recent_sell_signal_date">N/A</span></p>

    </div>




	<!-- Placeholder for the stock chart?? -->
	<div id="stock-chart"></div>
	<div id="stock-chart" style="width: 100%; height: 400px;"></div>







 
    <script>
        // Function to handle the form submission and fetch stock data
        $('#ticker-form').submit(function(event) {
            event.preventDefault();
            var ticker = $('#ticker').val();

            // Make an AJAX request to the Flask backend
            $.getJSON('/get_stock_data', { ticker: ticker }, function(data) {
                // Update the page with the current price from the data
                $('#current_price').text(data.current_price);
		$('#current_20_day_sma').text(data.current_20_day_sma);
		$('#current_50_day_sma').text(data.current_50_day_sma);
		$('#current_buy_signal').text(data.current_buy_signal);
	$('#most_recent_buy_signal_date').text(data.most_recent_buy_signal_date);
	$('#current_sell_signal').text(data.current_sell_signal);
	$('#most_recent_sell_signal_date').text(data.most_recent_sell_signal_date);
		$('#current_macd').text(data.current_macd);
		$('#current_signal_line').text(data.current_signal_line);
		$('#current_histogram').text(data.current_histogram);


	// debugging the graph's received data
	console.log("Received data:", data);  // Add this line to log the data
	// Check the lengths of arrays
    	console.log("Dates length:", data.dates.length);
	console.log("Closing prices length:", data.closing_prices.length);

	// Prepare data for Plotly
        var trace1 = {
            x: data.dates,
            y: data.closing_prices,
            mode: 'lines+markers',
            name: 'Closing Price'
        };
        var trace2 = {
            x: data.dates,
            y: data['20_day_smas'],
            mode: 'lines+markers',
            name: '20-day SMA'
        };
        var trace3 = {
            x: data.dates,
            y: data['50_day_smas'],
            mode: 'lines+markers',
            name: '50-day SMA'
        };
        var trace4 = {
            x: data.dates,
            y: data.macd,
            mode: 'lines+markers',
            name: 'MACD'
        };
	var traceBuySignal = {
	    x: data.buy_signal_dates,
	    y: data.buy_signal_dates.map(function(d){
		return data.closing_prices[data.dates.indexOf(d)];
		}),
	    mode:'markers',
	    name: 'Buy Signal',
	    markers: {
		color: 'green',
		size:10,
		symbol:'circle'}
	};
	var traceSellSignal = {
	    x: data.sell_signal_dates,
	    y: data.sell_signal_dates.map(function(d){
		return data.closing_prices[data.dates.indexOf(d)];
		}),
	    mode:'markers',
	    name: 'Sell Signal',
	    markers: {
		color: 'red',
		size:10,
		symbol:'x'}
	};


        var layout = {
            title: ticker + ' 60 Day Data',
            xaxis: { 
		title: 'Date',
		tickangle: 45,
		range:[data.dates[0], data.dates[data.dates.length-1]]
	},
            yaxis: { title: 'Price (USD)' }
        };
        var plotData = [trace1, trace2, trace3, trace4, traceBuySignal, traceSellSignal];
        // Render the plot
        Plotly.newPlot('stock-chart', plotData, layout);




            }).fail(function() {
                alert('Error retrieving stock data.');
            });
        });
    </script>
</body>
</html>
